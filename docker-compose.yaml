version: "3.0"
services:
  # user-info-manager:
  #   build:
  #     context: ./user-info-manager
  #     dockerfile: Dockerfile
  #   image: userinfomanager
  #   container_name: userinfomanager
  #   ports:
  #     - "5000:${APP_PORT}"
  #   env_file:
  #     - .env
  #   depends_on:
  #     - broker
  #     - zookeeper
  #     - keycloak-ready
  #   restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.0
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8080:8080"
    volumes:
      - /mnt/c/Users/Yanis/Downloads/uncategorised/realm-export.json:/opt/keycloak/data/import/realm.json
    command: start-dev --import-realm
    
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_CREATE_TOPICS: user-data:1:1, credit-data:1:1, chart-data:1:1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: unless-stopped

    
  

  # frontend:
  #   build:
  #   container_name: 
  #   environment: